<UserControl x:Class="QIQO.Business.Module.Invoices.Views.InvoiceViewX"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:QIQO.Business.Module.Invoices.Views"
             xmlns:model="clr-namespace:QIQO.Business.Client.Entities;assembly=QIQO.Business.Client.Entities"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             xmlns:coreui="clr-namespace:QIQO.Business.Client.Core.UI;assembly=QIQO.Business.Client.Core.UI"
             xmlns:core="clr-namespace:QIQO.Business.Client.Core;assembly=QIQO.Business.Client.Core"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:acct="clr-namespace:QIQO.Business.Module.Account.Views;assembly=QIQO.Business.Module.Account"
             xmlns:general="clr-namespace:QIQO.Business.Module.General.Views;assembly=QIQO.Business.Module.General"
             xmlns:prism="http://prismlibrary.com/" FocusManager.FocusedElement="{Binding ElementName=AccountCodeTxt}">
    <UserControl.Resources>
        <!--<Style x:Key="ClosableTabItem" TargetType="TabItem">
            <Setter Property="Header" Value="{Binding DataContext.ViewTitle}"/>
            <Setter Property="HeaderTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <ContentControl VerticalAlignment="Center" HorizontalAlignment="Center"
                                            Margin="0,0,7,0" Content="{Binding}"/>
                            <Button Grid.Column="1" Content="X">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="Click">
                                        <coreui:CloseTabAction/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </Button>

                        </Grid>
                    </DataTemplate>
                </Setter.Value>
            </Setter>
        </Style>-->
        <ObjectDataProvider MethodName="GetValues"
                    ObjectType="{x:Type sys:Enum}"
                    x:Key="InvoiceStatusDataProvider">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="model:QIQOInvoiceStatus" />
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        <ObjectDataProvider MethodName="GetValues"
                    ObjectType="{x:Type sys:Enum}"
                    x:Key="InvoiceItemStatusDataProvider">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="model:QIQOInvoiceItemStatus" />
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        <CollectionViewSource x:Key="ProductListing" Source="{Binding ProductList}" />
        <CollectionViewSource x:Key="AccountContactsListing" Source="{Binding AccountContacts}" />
        <!--<ResourceDictionary Source="pack://application:,,,/QIQO.Business.Client.Core.UI;component/Resources/WindowResources.xaml" x:Key="ShareResources"/>-->
        <core:MouseConverter x:Key="MouseConverter" />
    </UserControl.Resources>
    <UserControl.Cursor>
        <Binding Path="IsBusy" Converter="{StaticResource MouseConverter}"/>
    </UserControl.Cursor>

    <i:Interaction.Triggers>
        <prism:InteractionRequestTrigger SourceObject="{Binding EditInvoiceItemRequest}">
            <prism:PopupWindowAction IsModal="True" CenterOverAssociatedObject="True">
                <prism:PopupWindowAction.WindowContent>
                    <local:InvoiceItemView />
                </prism:PopupWindowAction.WindowContent>
                <prism:PopupWindowAction.WindowStyle>
                    <Style TargetType="Window">
                        <!--<Setter Property="WindowStyle" Value="None" />
                        <Setter Property="ResizeMode" Value="CanResizeWithGrip" />-->
                        <Setter Property="SizeToContent" Value="WidthAndHeight" />
                        <Setter Property="Background" Value="{StaticResource DefaultAppBackgroundBrush}"/>
                        <Setter Property="ShowInTaskbar" Value="False"/>
                        <Setter Property="Margin" Value="10"/>
                    </Style>
                </prism:PopupWindowAction.WindowStyle>
            </prism:PopupWindowAction>
        </prism:InteractionRequestTrigger>

        <prism:InteractionRequestTrigger SourceObject="{Binding FindAccountRequest}">
            <prism:PopupWindowAction IsModal="True" CenterOverAssociatedObject="True">
                <prism:PopupWindowAction.WindowContent>
                    <acct:AccountFinderView />
                </prism:PopupWindowAction.WindowContent>
                <prism:PopupWindowAction.WindowStyle>
                    <Style TargetType="Window">
                        <!--<Setter Property="WindowStyle" Value="None" />
                        <Setter Property="ResizeMode" Value="CanResizeWithGrip" />-->
                        <Setter Property="SizeToContent" Value="WidthAndHeight" />
                        <Setter Property="Background" Value="{StaticResource DefaultAppBackgroundBrush}"/>
                        <Setter Property="ShowInTaskbar" Value="False"/>
                        <Setter Property="Margin" Value="10"/>
                    </Style>
                </prism:PopupWindowAction.WindowStyle>
            </prism:PopupWindowAction>
        </prism:InteractionRequestTrigger>

        <prism:InteractionRequestTrigger SourceObject="{Binding SaveChangesConfirmationRequest}">
            <prism:PopupWindowAction IsModal="True" CenterOverAssociatedObject="True">

                <prism:PopupWindowAction.WindowStyle>
                    <Style TargetType="Window">
                        <Setter Property="SizeToContent" Value="WidthAndHeight" />
                        <Setter Property="Background" Value="{StaticResource DefaultAppBackgroundBrush}"/>
                        <Setter Property="ShowInTaskbar" Value="False"/>
                        <Setter Property="Margin" Value="20"/>
                    </Style>
                </prism:PopupWindowAction.WindowStyle>
            </prism:PopupWindowAction>
        </prism:InteractionRequestTrigger>

        <prism:InteractionRequestTrigger SourceObject="{Binding DeleteConfirmationRequest}">
            <prism:PopupWindowAction IsModal="True" CenterOverAssociatedObject="True">

                <prism:PopupWindowAction.WindowStyle>
                    <Style TargetType="Window">
                        <Setter Property="SizeToContent" Value="WidthAndHeight" />
                        <Setter Property="Background" Value="{StaticResource DefaultAppBackgroundBrush}"/>
                        <Setter Property="ShowInTaskbar" Value="False"/>
                        <Setter Property="Margin" Value="20"/>
                    </Style>
                </prism:PopupWindowAction.WindowStyle>
            </prism:PopupWindowAction>
        </prism:InteractionRequestTrigger>

        <prism:InteractionRequestTrigger SourceObject="{Binding FindOrderRequest}">
            <prism:PopupWindowAction IsModal="True" CenterOverAssociatedObject="True">
                <prism:PopupWindowAction.WindowContent>
                    <general:OrderFinderView/>
                </prism:PopupWindowAction.WindowContent>
                <prism:PopupWindowAction.WindowStyle>
                    <Style TargetType="Window">
                        <!--<Setter Property="WindowStyle" Value="None" />
                        <Setter Property="ResizeMode" Value="CanResizeWithGrip" />-->
                        <Setter Property="SizeToContent" Value="WidthAndHeight" />
                        <Setter Property="Background" Value="{StaticResource DefaultAppBackgroundBrush}"/>
                        <Setter Property="ShowInTaskbar" Value="False"/>
                    </Style>
                </prism:PopupWindowAction.WindowStyle>
            </prism:PopupWindowAction>
        </prism:InteractionRequestTrigger>

    </i:Interaction.Triggers>

    <StackPanel Margin="10">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="30"/>
                <RowDefinition Height="30"/>
                <RowDefinition Height="30"/>
                <RowDefinition Height="30"/>
                <RowDefinition Height="30"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="110"/>
                <ColumnDefinition/>
                <ColumnDefinition Width="100"/>
                <ColumnDefinition Width="100"/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <Label Content="Account Code:" Grid.Column="0" Grid.Row="0"></Label>
            <TextBox Text="{Binding Invoice.Account.AccountCode}" IsReadOnly="False" Grid.Column="1" Grid.Row="0" Margin="3" TabIndex="0" x:Name="AccountCodeTxt">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="LostFocus">
                        <i:InvokeCommandAction 
                                Command="{Binding GetAccountCommand}" 
                                CommandParameter="{Binding Text, ElementName=AccountCodeTxt}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </TextBox>
            <StackPanel Grid.Row="0" Grid.Column="2" Orientation="Horizontal">
                <Button x:Name="FindAccount" Grid.Row="0" Grid.Column="2" Margin="3" Width="30" ToolTip="Find Account" Command="{Binding FindAccountCommand}">
                    <Image Source="/QIQO.Business.Client.Core.UI;component/Images/appbar.page.search.png"></Image>
                </Button>
                <Button x:Name="NewAccount" Grid.Row="0" Grid.Column="2" Margin="3" Width="30" ToolTip="New Invoice from Order" Command="{Binding NewFromOrderCommand}">
                    <Image Source="/QIQO.Business.Client.Core.UI;component/Images/appbar.new.png"></Image>
                </Button>
            </StackPanel>
            <Label Content="Account Name:" Grid.Column="0" Grid.Row="1"></Label>
            <TextBox Text="{Binding Invoice.Account.AccountName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" IsReadOnly="True" Grid.Column="1" Grid.Row="1" Grid.ColumnSpan="2" Margin="3" ></TextBox>
            <Label Content="Account Contact:" Grid.Column="0" Grid.Row="2"></Label>
            <ComboBox Name="AccountContactCombo" ItemsSource="{Binding Source={StaticResource AccountContactsListing}}" 
                      DisplayMemberPath="PersonFullNameFML" SelectedValuePath="EntityPersonKey"
                  SelectedItem="{Binding Invoice.AccountContactKey}" Grid.Column="1" Grid.Row="2" Margin="3" TabIndex="2" Grid.ColumnSpan="1" ></ComboBox>

            <!--<TextBox Text="{Binding Invoice.InvoiceAccountContact.PersonFullNameFML}" IsReadOnly="True" Grid.Column="1" Grid.Row="2" Grid.ColumnSpan="2" Margin="3"></TextBox>-->

            <Label Content="Invoice Number:" Grid.Column="3" Grid.Row="0"></Label>
            <TextBox Text="{Binding Invoice.InvoiceNumber}"  IsReadOnly="True" Grid.Column="4" Grid.Row="0" Margin="3"></TextBox>
            <Label Content="Invoice Date:" Grid.Column="3" Grid.Row="1"></Label>
            <TextBox Text="{Binding Invoice.InvoiceEntryDate, Mode=OneWay}"  Grid.Column="4" Grid.Row="1" Margin="3" TabIndex="1" IsReadOnly="True"></TextBox>
            <Label Content="Invoice Status:" Grid.Column="3" Grid.Row="2"></Label>
            <ComboBox Name="InvoiceStatusCombo" ItemsSource="{Binding Source={StaticResource InvoiceStatusDataProvider}}" 
                  SelectedItem="{Binding Invoice.InvoiceStatus}" Grid.Column="4" Grid.Row="2" Margin="3" TabIndex="2"></ComboBox>
            <Label Content="Due By:" Grid.Column="3" Grid.Row="3"></Label>
            <!--<TextBox Text="{Binding SalesRep.PersonFirstName}" Grid.Column="4" Grid.Row="3" Margin="3"></TextBox>-->
            <Label Content="Sale Rep:" Grid.Column="0" Grid.Row="3"></Label>
            <ComboBox Name="SaleRepCombo" ItemsSource="{Binding SalesRepList}" SelectedValue="{Binding Invoice.SalesRep.EntityPersonKey}"
                    DisplayMemberPath="PersonFullNameLF" SelectedValuePath="EntityPersonKey"
                SelectedItem="{Binding Invoice.SalesRepKey, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"  Grid.Column="1" Grid.Row="3" Margin="3" TabIndex="4"></ComboBox>
            <!--<DatePicker Text="{Binding Invoice.DeliverByDate, Mode=TwoWay, ValidatesOnNotifyDataErrors=True,NotifyOnValidationError=True}"  
                        Grid.Column="4" Grid.Row="3" Margin="3" TabIndex="3"></DatePicker>-->

            <Label Content="Account Rep:" Grid.Column="0" Grid.Row="4"></Label>
            <ComboBox Name="AccountRepCombo" ItemsSource="{Binding AccountRepList}" SelectedValue="{Binding Invoice.AccountRep.EntityPersonKey}"
                    DisplayMemberPath="PersonFullNameLF" SelectedValuePath="EntityPersonKey"
                SelectedItem="{Binding Invoice.AccountRepKey, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"  Grid.Column="1" Grid.Row="4" Margin="3" TabIndex="4"></ComboBox>
        </Grid>
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="30"/>
                <RowDefinition Height="30"/>
                <RowDefinition Height="30"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="30"/>
                <RowDefinition Height="0"/>
                <RowDefinition Height="0"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="30"/>
                <!--<RowDefinition Height="30"/>-->
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="110"/>
                <ColumnDefinition/>
                <ColumnDefinition/>
                <ColumnDefinition/>
                <ColumnDefinition/>
                <ColumnDefinition/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <Label Grid.Column="1" Grid.Row="0" Content="Billing Address" Grid.ColumnSpan="3" HorizontalContentAlignment="Left"/>
            <Label Grid.Column="4" Grid.Row="0" Content="Shipping Address" Grid.ColumnSpan="3" HorizontalContentAlignment="Left"/>
            <Label Grid.Column="0" Grid.Row="1" Content="Address Line 1" Margin="3"/>
            <Label Grid.Column="1" Grid.ColumnSpan="3" Grid.Row="1" Content="{Binding DefaultBillingAddress.AddressLine1}" Margin="3" HorizontalContentAlignment="Left"/>
            <Label Grid.Column="4" Grid.ColumnSpan="3" Grid.Row="1" Content="{Binding DefaultShippingAddress.AddressLine1}" Margin="3" HorizontalContentAlignment="Left"/>
            <Label Grid.Column="0" Grid.Row="2" Content="Address Line 2" Margin="3"/>
            <Label Grid.Column="1" Grid.ColumnSpan="3" Grid.Row="2" Content="{Binding DefaultBillingAddress.AddressLine2}" Margin="3" HorizontalContentAlignment="Left"/>
            <Label Grid.Column="4" Grid.ColumnSpan="3" Grid.Row="2" Content="{Binding DefaultShippingAddress.AddressLine2}" Margin="3" HorizontalContentAlignment="Left"/>
            <Label Grid.Column="0" Grid.Row="3" Content="Address Line 3" Margin="3" Visibility="Collapsed"/>
            <Label Grid.Column="1" Grid.ColumnSpan="3" Grid.Row="3" Content="{Binding DefaultBillingAddress.AddressLine3}" Margin="3" Visibility="Collapsed" HorizontalContentAlignment="Left"/>
            <Label Grid.Column="4" Grid.ColumnSpan="3" Grid.Row="3" Content="{Binding DefaultShippingAddress.AddressLine3}" Margin="3" Visibility="Collapsed" HorizontalContentAlignment="Left"/>
            <Label Grid.Column="0" Grid.Row="4" Content="Address Line 4" Margin="3" Visibility="Collapsed"/>
            <Label Grid.Column="1" Grid.ColumnSpan="3" Grid.Row="4" Content="{Binding DefaultBillingAddress.AddressLine4}" Margin="3" Visibility="Collapsed" HorizontalContentAlignment="Left"/>
            <Label Grid.Column="4" Grid.ColumnSpan="3" Grid.Row="4" Content="{Binding DefaultShippingAddress.AddressLine4}" Margin="3" Visibility="Collapsed" HorizontalContentAlignment="Left"/>
            <Label Grid.Column="0" Grid.Row="5" Content="City/State/Postal" Margin="3"/>
            <Label Grid.Column="1" Grid.Row="5" Content="{Binding DefaultBillingAddress.AddressCity}" Margin="3" HorizontalContentAlignment="Left"/>
            <Label Grid.Column="2" Grid.Row="5" Content="{Binding DefaultBillingAddress.AddressState}" Margin="3" HorizontalContentAlignment="Left"/>
            <Label Grid.Column="3" Grid.Row="5" Content="{Binding DefaultBillingAddress.AddressPostalCode}" Margin="3" HorizontalContentAlignment="Left"/>
            <Label Grid.Column="4" Grid.Row="5" Content="{Binding DefaultShippingAddress.AddressCity}" Margin="3" HorizontalContentAlignment="Left"/>
            <Label Grid.Column="5" Grid.Row="5" Content="{Binding DefaultShippingAddress.AddressState}" Margin="3" HorizontalContentAlignment="Left"/>
            <Label Grid.Column="6" Grid.Row="5" Content="{Binding DefaultShippingAddress.AddressPostalCode}" Margin="3" HorizontalContentAlignment="Left"/>
            <!--<Label Grid.Column="0" Grid.Row="6" Content="County" Margin="3"></Label>
            <TextBox Grid.Column="1" Grid.ColumnSpan="3" Grid.Row="6" Text="{Binding DefaultBillingAddress.AddressCounty}" Margin="3" TabIndex="11"></TextBox>
            <TextBox Grid.Column="4" Grid.ColumnSpan="3" Grid.Row="6" Text="{Binding DefaultShippingAddress.AddressCounty}" Margin="3" TabIndex="20"></TextBox>
            <Label Grid.Column="0" Grid.Row="7" Content="Country" Margin="3"></Label>
            <TextBox Grid.Column="1" Grid.ColumnSpan="3" Grid.Row="7" Text="{Binding DefaultBillingAddress.AddressCountry}" Margin="3" TabIndex="12"></TextBox>
            <TextBox Grid.Column="4" Grid.ColumnSpan="3" Grid.Row="7" Text="{Binding DefaultShippingAddress.AddressCountry}" Margin="3" TabIndex="21"></TextBox>-->

            <DataGrid x:Name="InvoiceItemList" ItemsSource="{Binding Invoice.InvoiceItems}" 
        		AutoGenerateColumns="False" CanUserAddRows="True" CanUserDeleteRows="True" 
        		Height="180" Width="Auto" Padding="5" Margin="5" RowHeaderWidth="15" Grid.Row="8" Grid.ColumnSpan="7" 
        		SelectedItem="{Binding SelectedInvoiceItem, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
        		SelectedIndex="{Binding SelectedInvoiceItemIndex, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
        		SelectionMode="Single" TabIndex="22" IsEnabled="{Binding GridIsEnabled}">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="TargetUpdated">
                        <i:InvokeCommandAction 
        					Command="{Binding DataContext.UpdateItemTotalCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}"/>
                    </i:EventTrigger>
                    <i:EventTrigger EventName="SelectionChanged">
                        <i:InvokeCommandAction 
        					Command="{Binding DataContext.UpdateHeaderFromDetailCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
                <DataGrid.Columns>
                    <!--<DataGridTextColumn Header="Product Code" Binding="{Binding ProductCode,Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>-->



                    <!--<DataGridTextColumn Header="Product Key" Binding="{Binding ProductKey, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Visibility="Hidden" IsReadOnly="True"/>-->
                    <DataGridTextColumn Header="Seq" Binding="{Binding InvoiceItemSeq, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" IsReadOnly="True"/>
                    <!--<DataGridComboBoxColumn x:Name="cboProductCode" Header="Product Code" ItemsSource="{Binding Source={StaticResource ProductListing}}"
                                DisplayMemberPath="ProductDescCombo" SelectedValuePath="ProductKey"
                                SelectedValueBinding="{Binding ProductKey, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"  Width="80">
                            <DataGridComboBoxColumn.EditingElementStyle>
                                <Style TargetType="ComboBox">
                                    <Setter Property="IsEditable" Value="False" />
                                    <EventSetter Event="SelectionChanged" Handler="InvoiceItemList_ProductChangeString" />
                                </Style>
                            </DataGridComboBoxColumn.EditingElementStyle>
                        </DataGridComboBoxColumn>-->



                    <DataGridTemplateColumn Header="Code" Width="75">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding InvoiceItemProduct.ProductCode}"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                        <DataGridTemplateColumn.CellEditingTemplate>
                            <DataTemplate>
                                <ComboBox x:Name="ProductCombo" SelectedValue="{Binding ProductKey, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
        							DisplayMemberPath="ProductCode" SelectedValuePath="ProductKey" 
        							HorizontalContentAlignment="Stretch" ItemsSource="{Binding Source={StaticResource ProductListing}}"
        							IsSynchronizedWithCurrentItem="False">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="SelectionChanged">
                                            <i:InvokeCommandAction 
        										Command="{Binding DataContext.UpdateProdInfoCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}"
        										CommandParameter="{Binding Text, ElementName=ProductCombo}"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                    <ComboBox.ItemContainerStyle>
                                        <Style TargetType="{x:Type ComboBoxItem}">
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate>
                                                        <Grid>
                                                            <Grid.ColumnDefinitions>
                                                                <ColumnDefinition Width="0"/>
                                                                <ColumnDefinition Width="75"/>
                                                                <ColumnDefinition Width="*"/>
                                                            </Grid.ColumnDefinitions>
                                                            <TextBlock Margin="1" Grid.Column="0" Text="{Binding ProductKey}" Visibility="Hidden"  Width="0"/>
                                                            <TextBlock Margin="1" Grid.Column="1" Text="{Binding ProductCode}" Width="75"/>
                                                            <TextBlock Margin="1" Grid.Column="2" Text="{Binding ProductDesc}"/>
                                                        </Grid>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </ComboBox.ItemContainerStyle>
                                </ComboBox>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellEditingTemplate>
                    </DataGridTemplateColumn>


                    <DataGridTextColumn Header="Product Name" Binding="{Binding ProductName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Width="150"/>
                    <DataGridTextColumn Header="Description" Binding="{Binding ProductDesc, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Width="210"/>
                    <DataGridTextColumn Header="Qty" Binding="{Binding InvoiceItemQuantity, Mode=TwoWay, NotifyOnTargetUpdated=True, UpdateSourceTrigger=PropertyChanged}" x:Name="GridQtyColumn" Width="35"/>
                    <DataGridTextColumn Header="Item Price" Binding="{Binding ItemPricePer, Mode=TwoWay, NotifyOnTargetUpdated=True, StringFormat=\{0:C\}, UpdateSourceTrigger=PropertyChanged}" Width="70" x:Name="GridPriceColumn"/>
                    <DataGridTextColumn Header="Total" Binding="{Binding InvoiceItemLineSum, Mode=TwoWay, StringFormat=\{0:C\}, UpdateSourceTrigger=PropertyChanged}" Width="80" x:Name="GridTotalColumn" IsReadOnly="True"/>
                    <DataGridComboBoxColumn Header="Status" ItemsSource="{Binding Source={StaticResource InvoiceItemStatusDataProvider}}"
        				SelectedItemBinding="{Binding InvoiceItemStatus, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Width="100"/>
                </DataGrid.Columns>
            </DataGrid>

            <StackPanel Grid.Column="0" Grid.Row="9" Orientation="Horizontal" Grid.ColumnSpan="2">
                <!--<Button Content="Add..." Margin="3" Width="70" Command="{Binding NewInvoiceItemCommand}"/>-->
                <Button Content="Edit..." Margin="3" Width="70" Command="{Binding EditInvoiceItemCommand}" />
                <Button Content="Delete" Margin="3" Width="70"  Command="{Binding DeleteInvoiceItemCommand}"/>
            </StackPanel>

            <Label Content="Item Count:" Grid.Row="9" Grid.Column="1" HorizontalContentAlignment="Right"/>
            <TextBlock Text="{Binding Invoice.InvoiceItemCount}" Grid.Row="9" Grid.Column="2" Margin="3" VerticalAlignment="Center" Foreground="AntiqueWhite"/>
            <Label Content="Invoice Total:" Grid.Row="9" Grid.Column="3" HorizontalContentAlignment="Right"/>
            <TextBlock Text="{Binding Invoice.InvoiceValueSum, StringFormat=\{0:C\}}" Grid.Row="9" Grid.Column="4" Margin="3" VerticalAlignment="Center" Foreground="AntiqueWhite"/>
            <!--<Button Grid.Row="10" Grid.Column="0" Content="Cancel Invoice" Command="{Binding CancelInvoiceCommand}" TabIndex="40" Margin="3" Width="75" HorizontalAlignment="Left"/>-->

            <StackPanel Orientation="Horizontal" Grid.Row="10" Grid.Column="5" Grid.ColumnSpan="2" HorizontalAlignment="Right">
                <!--<Button Content="Cancel Order" Margin="3" Command="{Binding CancelCommand}"/>-->
                <Button Content="Print" Margin="3" Command="{Binding PrintCommand}" Width="60"/>
                <Button Content="Close" Margin="3" Command="{Binding CloseCommand}" Width="60"/>
                <Button Content="Save" Margin="3" Command="{Binding SaveCommand}" Width="60"/>
            </StackPanel>
        </Grid>
        <!--<TextBox Text="{Binding InvoiceKey}" IsReadOnly="True"></TextBox>
        <TextBox Text="{Binding InvoiceStatusDate}" ></TextBox>
        <TextBox Text="{Binding InvoiceItems[0].ProductName}" ></TextBox>
        <ComboBox Name="InvoiceItemStatusCombo" ItemsSource="{Binding Source={StaticResource InvoiceItemStatusDataProvider}}" 
                  SelectedItem="{Binding InvoiceItems[0].InvoiceItemStatus}"></ComboBox>-->

        <!--<Label Content="Billing Address:"></Label>-->
    </StackPanel>
</UserControl>
