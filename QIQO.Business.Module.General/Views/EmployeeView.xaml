<UserControl x:Class="QIQO.Business.Module.General.Views.EmployeeView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:QIQO.Business.Module.General.Views"
             xmlns:model="clr-namespace:QIQO.Business.Client.Entities;assembly=QIQO.Business.Client.Entities"
             xmlns:core="clr-namespace:QIQO.Business.Client.Core;assembly=QIQO.Business.Client.Core"
             xmlns:iact="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:prism="http://prismlibrary.com/"
             xmlns:sys="clr-namespace:System;assembly=mscorlib" Margin="10">
    <UserControl.Resources>
        <!--<ObjectDataProvider MethodName="GetValues"
                    ObjectType="{x:Type sys:Enum}"
                    x:Key="EmployeeTypeDataProvider">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="model:QIQOPersonType" />
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>-->
        <CollectionViewSource x:Key="CompanyRolesList" Source="{Binding CompanyRoles}" />
        <!--<CollectionViewSource x:Key="ParentListing" Source="{Binding EmployeeParent}" />-->
        <core:MouseConverter x:Key="MouseConverter" />
    </UserControl.Resources>
    <UserControl.Cursor>
        <Binding Path="IsBusy" Converter="{StaticResource MouseConverter}"/>
    </UserControl.Cursor>
    <iact:Interaction.Triggers>

        <prism:InteractionRequestTrigger SourceObject="{Binding EditAttributeRequest}">
            <prism:PopupWindowAction IsModal="True" CenterOverAssociatedObject="True">
                <prism:PopupWindowAction.WindowContent>
                    <local:AttributeView />
                </prism:PopupWindowAction.WindowContent>
                <prism:PopupWindowAction.WindowStyle>
                    <Style TargetType="Window">
                        <!--<Setter Property="WindowStyle" Value="None" />
                        <Setter Property="ResizeMode" Value="CanResizeWithGrip" />-->
                        <Setter Property="SizeToContent" Value="WidthAndHeight" />
                        <Setter Property="Background" Value="{StaticResource DefaultAppBackgroundBrush}"/>
                        <Setter Property="ShowInTaskbar" Value="False"/>
                    </Style>
                </prism:PopupWindowAction.WindowStyle>
            </prism:PopupWindowAction>
        </prism:InteractionRequestTrigger>

    </iact:Interaction.Triggers>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="30"/>
            <RowDefinition Height="30"/>
            <RowDefinition Height="30"/>
            <RowDefinition Height="30"/>
            <RowDefinition Height="30"/>
            <RowDefinition Height="30"/>
            <RowDefinition Height="30"/>
            <RowDefinition Height="30"/>
            <RowDefinition Height="30"/>
            <RowDefinition Height="30"/>
            <RowDefinition Height="30"/>
            <RowDefinition Height="30"/>
            <RowDefinition Height="30"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="30"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="110"/>
            <ColumnDefinition Width="3*"/>
        </Grid.ColumnDefinitions>
        <Label Content="Employee Code" Grid.Column="0" Grid.Row="0" Margin="3"></Label>
        <TextBox Text="{Binding CurrentEmployee.PersonCode, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Grid.Column="1" Grid.Row="0" 
                                     Margin="3,3,0,3" MaxLength="50" Width="110" HorizontalAlignment="Left" IsReadOnly="True"></TextBox>
        <Label Content="Name (F,M,L)" Grid.Column="0" Grid.Row="1" Margin="3"></Label>
        <StackPanel Grid.Column="1" Grid.Row="1" Orientation="Horizontal">
            <TextBox Text="{Binding CurrentEmployee.PersonFirstName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="3" MaxLength="50" Width="110"></TextBox>
            <TextBox Text="{Binding CurrentEmployee.PersonMI, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="3" MaxLength="1" Width="20"></TextBox>
            <TextBox Text="{Binding CurrentEmployee.PersonLastName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="3" MaxLength="50" Width="150"></TextBox>
        </StackPanel>

        <Label Content="Address Line 1" Grid.Column="0" Grid.Row="2" Margin="3"></Label>
        <TextBox Text="{Binding DefaultAddress.AddressLine1, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Grid.Column="1" Grid.Row="2" Margin="3" 
                                     MaxLength="50" Width="292" HorizontalAlignment="Left"></TextBox>
        <Label Content="Address Line 2" Grid.Column="0" Grid.Row="3" Margin="3"></Label>
        <TextBox Text="{Binding DefaultAddress.AddressLine2, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Grid.Column="1" Grid.Row="3" Margin="3" 
                                     MaxLength="50" Width="292" HorizontalAlignment="Left"></TextBox>
        <Label Content="City/St./Postal" Grid.Column="0" Grid.Row="4" Margin="3"></Label>
        <StackPanel Grid.Column="1" Grid.Row="4" Orientation="Horizontal">

            <TextBox Grid.Column="1" Grid.Row="5" Text="{Binding DefaultAddress.AddressCity, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="3" Width="110"></TextBox>
            <ComboBox Grid.Column="2" Grid.Row="5" ItemsSource="{Binding States}" 
                                      DisplayMemberPath="StateFullName" SelectedValuePath="StateCode" SelectedValue="{Binding DefaultAddress.AddressState}"
                                      Margin="3" Width="100"></ComboBox>
            <TextBox Grid.Column="2" Grid.Row="5" Text="{Binding DefaultAddress.AddressPostalCode, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                         Margin="3" Width="70" MaxLength="10" x:Name="DefaultPostal">
                <iact:Interaction.Triggers>
                    <iact:EventTrigger EventName="LostFocus">
                        <iact:InvokeCommandAction 
                                        Command="{Binding ValidateAddressCommand}" />
                    </iact:EventTrigger>
                </iact:Interaction.Triggers>
            </TextBox>
            <!--LostFocus="DefaultPostal_LostFocus"-->

        </StackPanel>
        <Label Content="Date of Birth" Grid.Column="0" Grid.Row="5" Margin="3"></Label>
        <DatePicker Grid.Column="1" Grid.Row="5" Text="{Binding CurrentEmployee.PersonDOB, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="3"
                                    Width="100" HorizontalAlignment="Left"></DatePicker>
        <Label Content="Start Date" Grid.Column="0" Grid.Row="6" Margin="3"></Label>
        <DatePicker Grid.Column="1" Grid.Row="6" Text="{Binding CurrentEmployee.StartDate, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="3"
                                    Width="100" HorizontalAlignment="Left"></DatePicker>
        <Label Content="End Date" Grid.Column="0" Grid.Row="7" Margin="3"></Label>
        <DatePicker Grid.Column="1" Grid.Row="7" Text="{Binding CurrentEmployee.EndDate, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="3"
                                    Width="100" HorizontalAlignment="Left"></DatePicker>
        <!--<Label Content="Employee Type" Grid.Column="0" Grid.Row="8" Margin="3"></Label>
        <ComboBox ItemsSource="{Binding Source={StaticResource EmployeeTypeDataProvider}}" Grid.Column="1" Grid.Row="8" Margin="3"
                                    Width="150" HorizontalAlignment="Left"  SelectedValue="{Binding CompanyRoleType, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"></ComboBox>-->
        <Label Content="Person Role" Grid.Column="0" Grid.Row="8" Margin="3"></Label>
        <ComboBox ItemsSource="{Binding Source={StaticResource CompanyRolesList}}" Grid.Column="1" Grid.Row="8" Margin="3"
                                    Width="150" HorizontalAlignment="Left"  SelectedValue="{Binding CurrentEmployee.RoleInCompany, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"></ComboBox>

        <Label Content="Supervisor" Grid.Column="0" Grid.Row="9" Margin="3"></Label>
        <ComboBox ItemsSource="{Binding Supervisors}" Grid.Column="1" Grid.Row="9" Margin="3"
                  Width="150" HorizontalAlignment="Left" DisplayMemberPath="PersonFullNameFL" SelectedValuePath="PersonKey"
                  SelectedValue="{Binding CurrentEmployee.ParentEmployeeKey, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"></ComboBox>
        
        <Label Content="Comment" Grid.Column="0" Grid.Row="10" Margin="3"></Label>
        <TextBox Text="{Binding CurrentEmployee.Comment, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Grid.Column="1" Grid.Row="10" Margin="3" Width="400"
                                    HorizontalAlignment="Left" Grid.RowSpan="2" Height="60"></TextBox>
        <DataGrid x:Name="EmpAttributeList" ItemsSource="{Binding CurrentEmployee.PersonAttributes}" 
                                      AutoGenerateColumns="False" CanUserAddRows="False"
                                      Height="Auto" Width="Auto" Padding="5" Margin="5" 
                                      SelectedItem="{Binding AttSelectedItem, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                      SelectedIndex="{Binding AttSelectedIndex, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                      SelectionMode="Single" TabIndex="310" Grid.Row="12" Grid.Column="0" Grid.ColumnSpan="2" Grid.RowSpan="2">
            <DataGrid.Columns>
                <DataGridTextColumn Header="Attribute Key" Binding="{Binding AttributeKey,Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" IsReadOnly="True" Visibility="Hidden"/>
                <DataGridTextColumn Header="Attribute Name" Binding="{Binding AttributeTypeData.AttributeTypeName,Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" IsReadOnly="True"  Width="130"/>
                <DataGridTextColumn Header="Attribute Value" Binding="{Binding AttributeValue,Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Width="130"/>
                <DataGridTextColumn Header="Data Type" Binding="{Binding AttributeTypeData.AttributeDataTypeKey,Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Width="100" IsReadOnly="True"/>
                <DataGridTextColumn Header="Display Format" Binding="{Binding AttributeDisplayFormat,Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Width="130"/>
                <DataGridTextColumn Header="Description" Binding="{Binding AttributeTypeData.AttributeTypeDesc,Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Width="190" IsReadOnly="True"/>
            </DataGrid.Columns>
        </DataGrid>
        <StackPanel Orientation="Horizontal" Grid.Column="0" Grid.Row="14" >
            <Button Margin="3" Command="{Binding EditAttributeCommand}" Background="Transparent" BorderBrush="Transparent" ToolTip="Edit Attribute...">
                <Image Source="/QIQO.Business.Client.Core.UI;component/Images/32/change.png"></Image>
            </Button>
            <Button Margin="3" Command="{Binding DeleteAttributeCommand}" Background="Transparent" BorderBrush="Transparent" ToolTip="Clear Attribute">
                <Image Source="/QIQO.Business.Client.Core.UI;component/Images/32/delete.png"></Image>
            </Button>
        </StackPanel>
        <StackPanel Grid.Column="1" Grid.Row="14" Orientation="Horizontal"  HorizontalAlignment="Right">
            <Button Content="Save" Command="{Binding SaveCommand}" Margin="3" Width="100" HorizontalAlignment="Right"></Button>
            <Button Content="Close" IsCancel="True" Margin="3" Width="100" HorizontalAlignment="Right"></Button>
        </StackPanel>
    </Grid>
</UserControl>
